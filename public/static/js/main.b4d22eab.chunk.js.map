{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducers.js","reducers/rootReducers.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/events.js","components/ui/NavBar.js","helpers/calendar-mesagges-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducers","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithOutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","checkingFinish","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","rep","json","ok","setItem","Date","getTime","uid","error","msg","Swal","fire","placeholder","onChange","console","log","errors","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","NavBar","useSelector","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","finish","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","contentLabel","overlayClassName","momentStart","momentEnd","isAfter","trim","length","res","getState","resp","_id","eventfStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventsNewFormat","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuth","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4d22eab.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n    \r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActiveEvent: '[event], Clear event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventCleaning: '[event] Event cleaning',\r\n    \r\n\r\n    authCheckingFinish: '[auth] Finish chicking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] StartRegister',\r\n    authStartTokenRenew: '[auth] StartTokenRenew',\r\n    authLogout: '[auth] Logout',\r\n\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false,\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        case types.authLogout :\r\n            return {\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: 'dsfsdfsdfas342',\r\n//     title: 'initialState',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'comprar comida',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Nestor'\r\n//     }\r\n// }\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [...state.events, action.payload]\r\n            }\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null,\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id)\r\n                        ? action.payload\r\n                        : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null,\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload],\r\n            }\r\n        case types.eventCleaning:\r\n            return {\r\n                ...initialState\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            }\r\n            case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducers\";\r\n\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducers } from \"../reducers/rootReducers\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithOutToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchWithToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token')  || '';\r\n    if(method === 'GET'){\r\n        return fetch(url, ({\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        }));\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithOutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        const rep = await fetchWithOutToken('auth', {email, password}, 'POST');\r\n        const body = await rep.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            let error;\r\n            if(body?.msg) {\r\n                error = body.msg\r\n            }\r\n            else {\r\n                error = body.password.msg\r\n            }\r\n            Swal.fire('Error', error, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const rep = await fetchWithOutToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await rep.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            if(body.msg) {\r\n                return Swal.fire('Error', body.msg, 'error');\r\n            } else {\r\n                const { errors } = body;\r\n                if(errors.email) {\r\n                    return Swal.fire('Error', errors.email.msg, 'error');\r\n                }  \r\n                return Swal.fire('Error', errors.password.msg, 'error');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const rep = await fetchWithToken('auth/renew');\r\n        const body = await rep.json();\r\n\r\n        if(body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            dispatch( checkingFinish() );  \r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () =>( { type: types.authCheckingFinish } );\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user,\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n    return [ values, handleInputChange, reset ];\r\n}\r\n","import React from 'react';\r\nimport './login.css';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'nestro@gamil.com',\r\n        lPassword: '123456',\r\n    });\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Edu',\r\n        rEmail: 'edu@gamil.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    });\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        console.log( rName, rEmail, rPassword1, rPassword2)\r\n        if(rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseña deben de ser iguales', 'error');\r\n        }\r\n        dispatch( startRegister(rEmail, rPassword1, rName) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from 'sweetalert2';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventfStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n       const {uid, name} = getState().auth;\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();    \r\n            if(body.ok) {\r\n                event.id = body.msg.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name,\r\n                }\r\n                dispatch(eventAddNew( event ));\r\n               \r\n            }\r\n        } catch (error) {\r\n\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const res = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await res.json();\r\n            if(body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const res = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await res.json();\r\n            if(body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const { msg:events } = await resp.json();\r\n            const eventsNewFormat = prepareEvents(events);\r\n            dispatch( eventLoaded(eventsNewFormat) );\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n});\r\n\r\nexport const eventCleaning = () => ({ type: types.eventCleaning });","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventCleaning } from '../../actions/events';\r\n\r\nexport const NavBar = () => {\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        dispatch( eventCleaning() );\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"/>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    );\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ \r\n    type: types.uiOpenModal,\r\n});\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal,\r\n});","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventfStartAddNew, eventStartUpdated } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minute(0).second(0).add(1, 'hours');\r\nconst finish = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: finish.toDate()\r\n};\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    \r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(finish.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value, \r\n        });\r\n    }\r\n    const handlestartChange  = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n    const handleEndDateChange  = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if( momentStart.isAfter( momentEnd )) {\r\n           Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio'); \r\n           return;\r\n        }\r\n        if(title.trim().length < 2){\r\n            setTitleValid(false);\r\n            return;\r\n        }\r\n        if(activeEvent){\r\n            dispatch(eventStartUpdated(formValues));\r\n        } else {\r\n            dispatch( eventfStartAddNew(formValues));\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            contentLabel=\"Example Modal\"\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1>{(activeEvent? 'Editar evento' : 'Nuevo Evento' )} </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={handleSubmit}\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handlestartChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n    return (\r\n        <button\r\n            className=\" btn btn-primary fab \"\r\n            onClick={handleOpenModal}\r\n        >\r\n            <i className=\"fas fa-plus\" />\r\n        </button>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar</span>\r\n        </button>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es-mx';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-mesagges-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\n \r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    \r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch]);\r\n    \r\n    const onDobleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n    const onViewCahnge = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor:(uid === event.user._id) ? '#367CF7' :'#465660' ,\r\n            borderRadius: '5px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color:'withe',\r\n        }\r\n        return {style};\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDobleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={ true }\r\n                onView={onViewCahnge}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {activeEvent &&\r\n                <DeleteEventFab />\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth, \r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (  \r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                (isAuth)\r\n                ? <Component { ...props } /> \r\n                : <Redirect to=\"/login\" />\r\n            )} \r\n        />      \r\n    );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuth, \r\n    component: Component, \r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={ (props) =>(\r\n                (!isAuth)\r\n                ?<Component {...props} />\r\n                : <Redirect to=\"/\" />\r\n            )}\r\n        \r\n        />\r\n    );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuth: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n\r\n    if(checking) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={LoginScreen} \r\n                        isAuth={ !!uid }\r\n                    />\r\n                    <PrivateRoute \r\n                            exact \r\n                            path=\"/\" \r\n                            component={CalendarScreen} \r\n                            isAuth={ !!uid }\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}